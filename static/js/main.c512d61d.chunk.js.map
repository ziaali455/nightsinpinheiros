{"version":3,"sources":["github-mark.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","NavigationBar","styled","div","_templateObject","_taggedTemplateLiteral","props","darkMode","Title","h1","_templateObject2","DarkModeToggleWrapper","_templateObject3","DarkModeText","span","_templateObject4","Body","_templateObject5","GitHubLink","a","_templateObject6","GitHubIcon","svg","_templateObject7","PoemTitle","_templateObject8","_templateObject9","h3","_templateObject10","LatinDescription","_templateObject11","_templateObject12","processPoemContent","_templateObject13","content","split","map","line","index","React","createElement","Fragment","key","PoemContent","_templateObject14","PoemsGrid","_templateObject15","App","_useState","useState","_useState2","_slicedToArray","setDarkMode","Switch","onClick","on","href","target","rel","src","GitHubIconSVG","viewBox","fill","xmlns","poemsData","poem","title","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kjOCSlCC,SAAgBC,IAAOC,IAAGC,MAAAC,YAAA,iMAKV,SAAAC,GAAK,OAAKA,EAAMC,SAAW,OAAS,WAC/C,SAAAD,GAAK,OAAKA,EAAMC,SAAW,OAAS,UAGzCC,EAAQN,IAAOO,GAAEC,MAAAL,YAAA,6DAMjBM,EAAwBT,IAAOC,IAAGS,MAAAP,YAAA,2EAMlCQ,EAAeX,IAAOY,KAAIC,MAAAV,YAAA,gCAI1BW,EAAOd,IAAOC,IAAGc,MAAAZ,YAAA,4KACH,SAAAC,GAAK,OAAKA,EAAMC,SAAW,OAAS,QAC7C,SAAAD,GAAK,OAAKA,EAAMC,SAAW,OAAS,SAKzCW,EAAahB,IAAOiB,EAACC,MAAAf,YAAA,4IAIhB,SAAAC,GAAK,OAAKA,EAAMC,SAAW,OAAS,SAKzCc,EAAanB,IAAOoB,IAAGC,MAAAlB,YAAA,iEAiBvBmB,GAZiBtB,IAAOC,IAAGsB,MAAApB,YAAA,wIAMdH,IAAOC,IAAGuB,MAAArB,YAAA,8DAMXH,IAAOyB,GAAEC,MAAAvB,YAAA,sDAUrBwB,GALW3B,IAAOF,EAAC8B,MAAAzB,YAAA,mDAKAH,IAAOF,EAAC+B,MAAA1B,YAAA,6FA4E3B2B,GAPW9B,IAAOC,IAAG8B,MAAA5B,YAAA,wIAOA,SAAA6B,GACzB,OAAOA,EAAQC,MAAM,MAAMC,IAAI,SAACC,EAAMC,GAAK,OACzCC,IAAAC,cAACD,IAAME,SAAQ,CAACC,IAAKJ,GAClBD,EACDE,IAAAC,cAAA,gBAKAG,EAAczC,IAAOF,EAAC4C,MAAAvC,YAAA,mDAItBwC,EAAY3C,IAAOC,IAAG2C,MAAAzC,YAAA,wLAOb0C,EAzFH,WAAM,IAAAC,EACgBC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAAvCzC,EAAQ2C,EAAA,GAAEE,EAAWF,EAAA,GAsB5B,OACEX,IAAAC,cAACxB,EAAI,CAACT,SAAUA,GACdgC,IAAAC,cAACvC,EAAa,CAACM,SAAUA,GACvBgC,IAAAC,cAAChC,EAAK,KAAC,uBACP+B,IAAAC,cAAC7B,EAAqB,KACpB4B,IAAAC,cAAC3B,EAAY,KAAC,aACd0B,IAAAC,cAACa,IAAM,CAACC,QAVa,WAC3BF,GAAa7C,IASgCgD,GAAIhD,KAE7CgC,IAAAC,cAACtB,EAAU,CACTX,SAAUA,EACViD,KAAK,+BACLC,OAAO,SACPC,IAAI,uBAEJnB,IAAAC,cAACnB,EAAU,CAACsC,IAAMC,IAChBC,QAAQ,YACRC,KAAMvD,EAAW,OAAS,OAC1BwD,MAAM,+BAGK,WAIjBxB,IAAAC,cAACX,EAAgB,KAAC,6pBAGlBU,IAAAC,cAACK,EAAS,KACPmB,EAAU5B,IAAI,SAAA6B,GAAI,OACjB1B,IAAAC,cAAA,OAAKE,IAAKuB,EAAKC,OACb3B,IAAAC,cAAChB,EAAS,KAAEyC,EAAKC,OACjB3B,IAAAC,cAACG,EAAW,KAAEX,EAAmBiC,EAAK/B,gBC9HnCiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCtE,EAAAuE,EAAA,GAAAC,KAAAxE,EAAAyE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5C,IAAAC,cAACD,IAAM6C,WAAU,KACf7C,IAAAC,cAACO,EAAG,QAORoB","file":"static/js/main.c512d61d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-mark.8dcc6b52.svg\";","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Switch from 'react-toggle-switch';\nimport 'react-toggle-switch/dist/css/switch.min.css';\nimport GitHubIconSVG from './github-mark.svg';\nimport poemsData from './poems.json';\nimport ReactHtmlParser from 'react-html-parser'; // Import the library\n\n\nconst NavigationBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: ${props => (props.darkMode ? '#555' : '#f2f2f2')}; /* White (#f2f2f2) for the default mode */\n  color: ${props => (props.darkMode ? '#fff' : '#333')};\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin: 0;\n  flex-grow: 1;\n`;\n\nconst DarkModeToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n`;\n\nconst DarkModeText = styled.span`\n  margin-right: 8px;\n`;\n\nconst Body = styled.div`\nbackground-color: ${props => (props.darkMode ? '#333' : '#fff')}; /* White (#fff) for the default mode */\n  color: ${props => (props.darkMode ? '#fff' : '#333')};\ntransition: background-color 0.3s, color 0.3s;\nmin-height: 100vh;\npadding: 20px;\n`;\nconst GitHubLink = styled.a`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.darkMode ? '#fff' : '#333')};\n  transition: color 0.3s;\n  margin-left: 2px;\n`;\n\nconst GitHubIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\nconst PoemsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px; /* Add padding here to match the Latin text section */\n`;\n\nconst PoemColumn = styled.div`\n  flex: 1;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst PoemTitle = styled.h3`\n  font-size: 20px;\n  margin-bottom: 5px;\n`;\n\nconst PoemText = styled.p`\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nconst LatinDescription = styled.p`\n  font-size: 18px;\n  font-weight: normal;\n  padding: 10px;\n  line-height: 1.8\n`;\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(true);\n\n  const poems = [\n    {\n      title: 'Had Death Not Had Me In Tears (Snippet) - Kofi Awonoor',\n      text: 'This is the text of poem 1.',\n    },\n    {\n      title: 'Poem 2',\n      text: 'This is the text of poem 2.',\n    },\n    {\n      title: 'Poem 3',\n      text: 'This is the text of poem 3.',\n    },\n    // Add more poems as needed\n  ];\n\n  const handleDarkModeToggle = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <Body darkMode={darkMode}>\n      <NavigationBar darkMode={darkMode}>\n        <Title>Nights in Pinheiros</Title>\n        <DarkModeToggleWrapper>\n          <DarkModeText>Dark Mode</DarkModeText>\n          <Switch onClick={handleDarkModeToggle} on={darkMode} />\n        </DarkModeToggleWrapper>\n        <GitHubLink\n          darkMode={darkMode}\n          href=\"https://github.com/ziaali455\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <GitHubIcon src= {GitHubIconSVG}\n            viewBox=\"0 0 24 24\"\n            fill={darkMode ? '#fff' : '#333'}\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            {/* Add your GitHub logo SVG code here */}\n          </GitHubIcon>\n          GitHub\n        </GitHubLink>\n      </NavigationBar>\n      <LatinDescription>\n      This is a collection of poems, both by me and some of my favorite poets, that I read and wrote during my time in Pinheiros, SÃ£o Paulo. As far as the original poems, these are the first I have ever written, and most are quite bad, but they are genuine. Some are written in Portuguese, others in English. This website is more for my own book-keeping, but I figured it would be good to share the work of some amazing literary figures. Inspiration was drawn from the incredible work of Ahmad Faraz (translated from Urdu), Rumi (translated from Farsi), Kofi Awoonor (translated from Ewe), Mahmoud Darwish (translated from Arabic), and, most importantly, Maya Angelou.\n      </LatinDescription>\n      <PoemsGrid>\n        {poemsData.map(poem => (\n          <div key={poem.title}>\n            <PoemTitle>{poem.title}</PoemTitle>\n            <PoemContent>{processPoemContent(poem.content)}</PoemContent>\n          </div>\n        ))}\n      </PoemsGrid>\n    </Body>\n  );\n};\n\nconst PoemCard = styled.div`\n  flex: 0 0 45%; /* Adjust the size of the poem card */\n  border: 1px solid #ccc;\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n// Function to replace \\n with React line breaks (<br />)\nconst processPoemContent = content => {\n  return content.split('\\n').map((line, index) => (\n    <React.Fragment key={index}>\n      {line}\n      <br />\n    </React.Fragment>\n  ));\n};\n\nconst PoemContent = styled.p`\n  font-size: 16px;\n  line-height: 1.6;\n`;\nconst PoemsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px; /* Adjust the spacing between poems */\n  padding: 20px; /* Add some padding to the grid container */\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}